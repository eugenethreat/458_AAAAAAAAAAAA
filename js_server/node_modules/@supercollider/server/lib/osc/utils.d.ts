/**
 * OSC utilities
 */
import { MsgType, OSCBundle, OSCMessage, OSCTimeType } from "@supercollider/osc";
/**
 * Converts a message received from scsynth:
 *
 * ```js
 *  {address: '/n_go',
 *    args:
 *     [ 1000 ,
 *       0 ,
 *       -1 ,
 *       3 ,
 *       0  ],
 *    oscType: 'message' }
 * ```
 *
 * to a flat array format:
 *
 * ```js
 * ['/n_go', 1000, 0, -1, 3, 0]
 * ```
 */
export declare function parseMessage(msg: OSCMessage): MsgType;
/**
 * Convert a simple Msg array to OSCMessage object for osc packMessage
 */
export declare function makeMessage(msg: MsgType): OSCMessage;
/**
 * Build an OSCBundle for osc packBundle
 *
 * @param {null|Number|Array|Date} time -
 *  - null: now, immediately
 *  - number: unix timestamp in seconds
 *  - Array: `[secondsSince1900Jan1, fractionalSeconds]`
 *  - Date
 * @param {Array} packets - osc messages as `[address, arg1, ...argN]`
 *                        or sub bundles as `[{timetag: , packets: }, ...]`
 */
export declare function makeBundle(time: OSCTimeType, packets: MsgType[]): OSCBundle;
/**
 * Format children of a bundle as either OSCMessage or OSCBundle objects.
 * TODO: not supporting nested bundles yet
 */
export declare function asPacket(thing: MsgType): OSCMessage;
export { dateToTimetag, deltaTimeTag } from "@supercollider/osc";
//# sourceMappingURL=utils.d.ts.map