import { Command, Context, Properties, UpdateContext } from "./types";
/**
 * updateContext Middleware
 *
 * Updates the player's context using DryadTree.updateContext
 *
 * Usage:
 *
 * Simplest example. The context is updated with someKey = 'someValue'
 *
 *  add() {
 *   return {
 *    updateContext: {
 *      someKey: 'someValue'
 *    }
 *   };
 *  }
 *
 * or:
 *
 *  prepareForAdd() {
 *    return {
 *      // return a function that will be called at command execution time
 *      updateContext: (context, properties) => {
 *        let nodeID = generateNextId();
 *        // these are the values that will be updated into context
 *        return {
 *          nodeID: nodeID,
 *          pid: startSomeProcess()  // any value that is a Promise will be resolved
 *        };
 *      }
 *    };
 *  }
 *
 */
export default function updateContext(command: Command, context: Context, properties: Properties, updater: UpdateContext): Promise<void>;
//# sourceMappingURL=updateContext.d.ts.map